% This file is part of the project CLASS (https://github.com/beckel/class).
% Licence: GPL 2.0 (http://www.gnu.org/licenses/gpl-2.0.html)
% Copyright: ETH Zurich & TU Darmstadt, 2012
% Authors: Christian Beckel (beckel@inf.ethz.ch), Leyna Sadamori (sadamori@inf.ethz.ch)

function results_roc_curves()
	
	result_path = 'projects/+energy/results/classification/26/sffs/';
	figure_path = 'projects/+energy/+images/results_roc_curves/';

    labels = { ...
        {'Age', 3}; ...
        {'All_Employed', 1}; ...
        {'Devices', 3}; ...
        {'eCooking', 1}; ...
        {'Employment', 1}; ...
        {'Families', 1}; ...
        {'Floorarea', 3}; ...
        {'HouseType', 1}; ...
        {'Income', 2}; ...
        {'LightBulbs', 1}; ...
        {'NoKids', 1}; ...
        {'OldHouses', 1}; ...
        {'Persons'; 2}; ...
        {'Singles', 1}; ...
        {'Retired', 1}; ...
        {'SocialClass', 1}; ...
        {'SocialClass', 3}; ...
        {'Unoccupied', 1}; ...
        {'Unoccupied', 2}; ...
        };
   
    labelsInPlot = { ...
        'age\_person: high'; ...
        'all\_employed: yes'; ...
        '#appliances: high'; ...
        'cooking: electrical'; ...
        'employment: employed'; ...
        'family: family'; ...
        'floor\_area: big'; ...
        'house\_type: free'; ...
        'income: high'; ...
        'lightbulbs: few'; ...
        'children: no'; ...
        'age\_house: old'; ...
        '#residents: >= 3'; ...
        'single: yes'; ...
        'retirement: retired'; ...
        'social\_class: high (A/B)'; ...
        'social\_class: low: (D/E)'; ...
        'unoccupied: yes'; ...
        'unoccupied: no'; ...
        };
        
    methods = { ...
        'knn_undersampling';...
        'lda_undersampling';...
        'mahal_undersampling';...
        'svm_undersampling';...
        'adaboost_undersampling';...
        };
    
    markers = { ...
        'o'; ...
        '*'; ...
        '^'; ...
        'd'; ...
        's'; ...
    };

    figure_of_merit = 'mcc';
     
    colors = { ...
            'r';...
            'b';...
            'g';...
            'm';...
            'k';...
            };
            
    l_legend = { ...
        'kNN';...
        'LDA';...
        'Mahal.';...
        'SVM';...
        'AdaBoost';...
        };
    
    width = 16;
    height = 22;
    linewidth = 1;
    fontsize = 8;
    fontname = 'Times';
    
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    fig_h = figure();
    min_fp = ones(1,length(labels));
    for l = 1:length(labels)
        
        tmp = labels{l};
        label = tmp{1};
        basis = tmp{2};
        
        %% Generate ROCs
        rocs = {};
        idx = [];
        for m = 1:length(methods)
            method = methods{m};
            load([result_path, 'sR-', label, '_', figure_of_merit, '_', method]);
            [ rocs{end+1}, idx(:,end+1) ] = generate_roc(sR, basis, method);
            
            % get X value where ROC touches [X, 0.5].
            element = max(find(rocs{m}(2,:) < 0.5));
            min_fp(l) = min(min_fp(l), rocs{m}(1,element));
        end
        
        %% Plot results
        h = subplot(5,4,l);
        hold on;
        roc_handles = [];
        cross_handles = [];
        
        sequence = [ 5 4 1 3 2 ];
        % for m = 1:length(methods)
        for m = 1:length(sequence)
            idx = sequence(m);
            r = rocs{idx};
            % roc_handles(end+1) = plot(r(1,:), r(2,:), 'Color', colors{m});
            line_fewer_markers(r(1,:), r(2,:), 3, markers{idx}, 'Color', colors{idx}, 'MFC', colors{idx}, 'markersize', 6);
        end
        
        % plot diagonal line
        line_x =  0 : 0.01 : 1;
        line_y =  0 : 0.01 : 1;
        
        plot(line_x, line_y, '--', 'Color', [0.5 0.5 0.5]);

        xlim([0, 1]);
        ylim([0, 1]);

        set(gca, 'YGrid', 'on');
        set(gca, 'XGrid', 'on');
        set(gca, 'XTick', [0 0.25 0.5 0.75 1]);
        set(gca, 'YTick', [0 0.25 0.5 0.75 1]);

%         ylabel('True positive rate (Recall)');
%         xlabel('False positive rate');
        title(labelsInPlot{l}, 'FontSize', fontsize, 'FontName', fontname);
    end
    
    %% create last one with a legend
    h = subplot(5,4,20);
    hold on;
    for i = 1:5
        plot(0, 0, ['-', markers{i}], 'MarkerFaceColor', colors{i}, 'Color', colors{i});
    end
    legend(l_legend);
    
    fig_h = make_report_ready(fig_h, 'size', [width, height, linewidth, fontsize]);
            
    % Save figure
    filename = 'results_roc_curves';
    warning off
    mkdir(figure_path);
    warning on
    % saveas(fig_h, [figure_path, filename, '.eps'], 'psc2');
%    print('-depsc2','-r600', [figure_path, filename, '.eps']);
    print('-depsc2', '-cmyk', '-r600', [figure_path, filename, '.eps']);
    saveas(fig_h, [figure_path, filename, '.png'], 'png');
    close(fig_h);    
    
    %% Do not plot legend
%         legend(roc_handles, l_legend, 'Location', 'SE'); 

end

