# This file is part of the project CLASS (https://github.com/beckel/class).
# Licence: GPL 2.0 (http://www.gnu.org/licenses/gpl-2.0.html)
# Copyright: ETH Zurich & TU Darmstadt, 2012
# Authors: Christian Beckel (beckel@inf.ethz.ch), Leyna Sadamori (sadamori@inf.ethz.ch)

# Log to file (1) or console (0)
log_to_file: 1

# Log levels: 'normal', 'debug'
log_level: 'debug'

# Dataset (e.g., 'issm', 'cer_ireland')
dataset: 'cer_ireland'

# Which weeks should be used for the analysis?
weeks: 
#  - 14
#  - 15
#  - 16
#  - 17
#  - 18
#  - 19
#  - 20
#  - 21
#  - 22
#  - 25
  - 26
#  - 27
#  - 28
#  - 29
#  - 30
#  - 31
#  - 32
#  - 33
  
# Some features require a reference to other weeks (e.g., during summer/winter).
reference_weeks:

# Should data be collected? (compute features, assign classes, ...)
# [ 0 .. 1 ]
perform_data_collection: 0

# Should classification be performed?
# [ 0 .. 1 ]
perform_classification: 1

classifier_params:
  - [ svm_scaling_factor, 0.1 ]
  - [ num_features, 12 ]

# Classifying 'weeks' (1) or 'households' (0).
# Classifying households: majority of weeks determines label
classification_type: 'households'

# Path where to store classification results
path_classification: 'results/classification/'

# Optimization criterion (figure of merit)
# NOTE: f_measure is only possible for two-class classification tasks
figure_of_merit:
  - [ accuracy, '@accuracy' ]
#  - [ f_measure, '@f_measure', 0.0625 ]
#  - [ f_measure, '@f_measure', 0.125 ]
#  - [ f_measure, '@f_measure', 0.25 ]
#  - [ f_measure, '@f_measure', 0.5 ]
#  - [ f_measure, '@f_measure', 0.8 ]
#  - [ f_measure, '@f_measure', 1 ]
#  - [ f_measure, '@f_measure', 1.4 ]
#  - [ f_measure, '@f_measure', 2 ]
#  - [ f_measure, '@f_measure', 4 ]
#  - [ f_measure, '@f_measure', 8 ]
#  - [ f_measure, '@f_measure', 16 ]
  
# Feature selection
# [ sfs, psfs ] currently implemented
feature_selection: 'sffs'
  
# Feature set that is used?
# [ e_energy.feature_set_all feature_set_all ]
feature_set: 'ireland.feature_set_all'
    
## A PRIORI KNOWLEDGE

# Include apriori knowledge
# [ 0 .. 1 ]
apriori: 0

# Path where apriori knowledge will be stored during data selection
path_apriori: 'results/apriori_knowledge/'

# A priori class functions
apriori_classes:
  - '@apriori_age'
  - '@apriori_bedrooms'
  - '@apriori_floorarea'
  - '@apriori_ownhouse'
  - '@apriori_persons'
  - '@apriori_singles'
  - '@apriori_socialclass'
  - '@apriori_typehouse'

# Combinations (connect apriori_classes with classes)
apriori_combinations:
  - [ 1, 2 ]
  - [ ]
  - [ ]
  - [ ]
  - [ ]
  - [ ]
  - [ ]
  - [ ]


classes:
#   - '@class_appliances'
#   - '@class_bedrooms'
#   - '@class_devices'
#   - '@class_dink'
#   - '@class_ecooking'
#   - '@class_eheating'
#   - '@class_employment'
#   - '@class_families'
#   - '@class_floorarea'
#   - '@class_housetype'
#   - '@class_lightbulbs'
#   - '@class_nokids'
#   - '@class_old_house'
#   - '@class_persons'
#   - '@class_retired'
  - '@class_singles'
#   - '@class_socialclass'
#   - '@class_waterheating'

classifiers:
#   - lda
#   - knn
#   - mahal
  - svm
#  - adaboost

